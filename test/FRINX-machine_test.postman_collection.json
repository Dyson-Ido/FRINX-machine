{
	"info": {
		"_postman_id": "35cf2d66-83d8-4bac-9f05-f45d451e7864",
		"name": "FRINX-machine _test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "List All Tasks",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9ec840d4-85a9-4f2b-9acd-a245f80caa3d",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Success\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"Task count > 0\"] = jsonData.length > 0;",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{conductor_ip}}:8080/api/metadata/taskdefs",
					"protocol": "http",
					"host": [
						"{{conductor_ip}}"
					],
					"port": "8080",
					"path": [
						"api",
						"metadata",
						"taskdefs"
					]
				}
			},
			"response": []
		},
		{
			"name": "List All Workflows",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4ab2de11-7c42-4d14-9680-f0ef5ad6d3ca",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Success\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"Workflow count > 0\"] = jsonData.length > 0;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{conductor_ip}}:8080/api/metadata/workflow",
					"protocol": "http",
					"host": [
						"{{conductor_ip}}"
					],
					"port": "8080",
					"path": [
						"api",
						"metadata",
						"workflow"
					]
				}
			},
			"response": []
		},
		{
			"name": "Mount cli device",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6cd7ab3e-1b72-4667-a402-6d4011de795d",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Success\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
							"});",
							"",
							"pm.environment.set(\"workflowId\", responseBody);",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": \"XR1\",\n  \"type\": \"ios\",\n  \"version\": \"6\",\n  \"host\": \"{{sample_topology_ip}}\",\n  \"protocol\": \"ssh\",\n  \"port\": \"10001\",\n  \"username\": \"cisco\",\n  \"password\": \"cisco\"\n}"
				},
				"url": {
					"raw": "http://{{conductor_ip}}:8080/api/workflow/Mount_cli_device",
					"protocol": "http",
					"host": [
						"{{conductor_ip}}"
					],
					"port": "8080",
					"path": [
						"api",
						"workflow",
						"Mount_cli_device"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check workflow status",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a08206af-b276-4edf-93ca-7ff8e88adf38",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Success\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"pm.test(\"Workflow status Success/Running\", function () {",
							"    pm.expect(jsonData.status).to.be.oneOf([\"COMPLETED\",\"RUNNING\"\t]);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{conductor_ip}}:8080/api/workflow/{{workflowId}}?includeTasks=false",
					"protocol": "http",
					"host": [
						"{{conductor_ip}}"
					],
					"port": "8080",
					"path": [
						"api",
						"workflow",
						"{{workflowId}}"
					],
					"query": [
						{
							"key": "includeTasks",
							"value": "false"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Check if connected",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6cd7ab3e-1b72-4667-a402-6d4011de795d",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Success\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
							"});",
							"",
							"pm.environment.set(\"workflowId\", responseBody);",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": \"XR1\",\n  \"type\": \"ios\",\n  \"version\": \"6\",\n  \"host\": \"{{sample_topology_ip}}\",\n  \"protocol\": \"ssh\",\n  \"port\": \"10001\",\n  \"username\": \"cisco\",\n  \"password\": \"cisco\"\n}"
				},
				"url": {
					"raw": "http://{{conductor_ip}}:8080/api/workflow/Mount_cli_device",
					"protocol": "http",
					"host": [
						"{{conductor_ip}}"
					],
					"port": "8080",
					"path": [
						"api",
						"workflow",
						"Mount_cli_device"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check workflow status",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a08206af-b276-4edf-93ca-7ff8e88adf38",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Success\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"pm.test(\"Workflow status Success/Running\", function () {",
							"    pm.expect(jsonData.status).to.be.oneOf([\"COMPLETED\",\"RUNNING\"\t]);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{conductor_ip}}:8080/api/workflow/{{workflowId}}?includeTasks=false",
					"protocol": "http",
					"host": [
						"{{conductor_ip}}"
					],
					"port": "8080",
					"path": [
						"api",
						"workflow",
						"{{workflowId}}"
					],
					"query": [
						{
							"key": "includeTasks",
							"value": "false"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Unmount",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "86bde727-53f4-4e47-99ab-d1a6a997d20f",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Success\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
							"});",
							"",
							"pm.environment.set(\"workflowId\", responseBody);",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": \"XR1\"\n}"
				},
				"url": {
					"raw": "http://{{conductor_ip}}:8080/api/workflow/Unmount_cli_device",
					"protocol": "http",
					"host": [
						"{{conductor_ip}}"
					],
					"port": "8080",
					"path": [
						"api",
						"workflow",
						"Unmount_cli_device"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}